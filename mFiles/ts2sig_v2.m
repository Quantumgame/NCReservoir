## Copyright (C) 2014 - Juan Pablo Carbajal
##
## This progrm is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program. If not, see <http://www.gnu.org/licenses/>.

## Author: Juan Pablo Carbajal <ajuanpi+dev@gmail.com>

## -*- texinfo -*-
## @deftypefn {Function File} {[@var{P} @var{A}] =} ts2sig (@var{t},@var{ts},@var{id},@var{v},@var{G},@var{dim})
## Converts spikes to continuous singals
## Build continuous signals from spikes at timestamps ts 
## generated by a 2D array of sensors. The signal is built 
## as y(x,y,t) = sum over ts v(t,ts).
## Where v: [0,T]x[0,T] --> [-1,1] is the temporal basis.
## @end deftypefn

function Y = ts2sig_v2 (t,ts,id,v,dim)
  nx = dim(1);
  ny = dim(2);
  N = nx*ny;

  nT  = length (t);
  nid = unique (id);
  nS  = length (nid);

  Y = zeros (nT,N);
#  for i = 1:nS
#    k  = find(id==nid(i));
#    ii = double(nid(i))+1;
#    Y(:,ii) = sum (v(t,ts(k).'),2);
#  endfor
  tic
  Y = cell2mat(pararrayfun (7,@(n)func(n,nid,id,t,ts,v),1:nS,"UniformOutput",0));
  toc
endfunction

function y = func (i,nid,id,t,ts,v)
    k  = find(id==nid(i));
    y = sum (v(t,ts(k).'),2);
endfunction
